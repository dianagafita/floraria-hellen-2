generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       Int       @id @default(autoincrement())
  created_at               DateTime  @default(now())
  email                    String    @unique
  first_name               String
  password                 String
  phone                    String
  second_name              String
  updated_at               DateTime  @updatedAt
  resetPasswordToken       String?   @unique
  resetPasswordTokenExpiry DateTime?
  emailVerificationToken   String?   @unique
  emailVerified            Boolean   @default(false)
  cart                     Cart[]
  orders                   Order[]
  sessions                 Session[]
}

model Cart {
  id         String   @id @default(cuid())
  userId     Int
  items      Json
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
}

model Order {
  id             Int         @id @default(autoincrement())
  total_price    Float
  order_state    String
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  user_id        Int
  cart_total     Float
  shipping_fee   Int
  sender_info    Json
  recipient_info Json
  user           User        @relation(fields: [user_id], references: [id])
  order_items    OrderItem[]
}

model Product {
  id              Int         @id @default(autoincrement())
  name            String
  price           Float
  product_type    String
  product_subtype String
  flowers_type    String
  images_url      String[]
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  productId       String?
  flowers         Flower[]
  OrderItem       OrderItem[]
}

model Eventproduct {
  id           Int      @id @default(autoincrement())
  name         String
  product_type String
  event_type   String
  images_url   String[]
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  productId    String?
  flowers      Flower[]
}

model Flower {
  id             Int           @id @default(autoincrement())
  flower         String
  productId      Int?
  quantity       Int
  eventProductId Int?
  eventProduct   Eventproduct? @relation(fields: [eventProductId], references: [id])
  product        Product?      @relation(fields: [productId], references: [id])
}

model OrderItem {
  id                  Int      @id @default(autoincrement())
  order_id            Int
  product_id          Int
  quantity            Int
  productDeliveryInfo String[]
  order               Order    @relation(fields: [order_id], references: [id])
  Product             Product  @relation(fields: [product_id], references: [id])
  extras              Extra[]  @relation("OrderItemExtras")
}

model Extra {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String
  quantity    Int
  order_items OrderItem[] @relation("OrderItemExtras")
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
